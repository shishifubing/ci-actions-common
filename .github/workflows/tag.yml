name: Create a tag

on:
  workflow_call:
    secrets:
      ci_github_token:
        description: Github token to checkout the repo and push the tag
        required: true
      gpg_private_key:
        description: GPG private key to sign the tag
        required: true
      gpg_passphrase:
        description: Passphrase for the private key
        required: true

env:
  BUILD_NUMBER: ${{ github.run_number }}
  BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  tag:
    name: Create a tag
    runs-on: ubuntu-latest
    container: gittools/gitversion:5.12.0-ubuntu.20.04-6.0

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.ci_github_token }}

      - name: Install gpg
        run: apt-get -y install gpg

      - name: Import GPG key
        id: import_gpg
        # v5.2.0 https://github.com/crazy-max/ghaction-import-gpg/releases
        uses: crazy-max/ghaction-import-gpg@111c56156bcc6918c056dbef52164cfa583dc549
        with:
          gpg_private_key: ${{ secrets.gpg_private_key }}
          passphrase: ${{ secrets.gpg_passphrase }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Tag
        env:
          GIT_AUTHOR_NAME: ${{ steps.import_gpg.outputs.name }}
          GIT_AUTHOR_EMAIL: ${{ steps.import_gpg.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.import_gpg.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.import_gpg.outputs.email }}
        run: |
          tag="v$(gitversion -showvariable SemVer)"
          commits="$(gitversion -showvariable CommitsSinceVersionSource)"
          commits=$(git log -n "${commits}" --skip=1 --pretty='format:  - %H %s')

          # create the tag
          git tag                                       \
            -s                                          \
            -a "${tag}"                                 \
            -m "${{ steps.gitversion.outputs.semVer }}" \
            -m "â€Ž"                               \
            -m "Commits:"                               \
            -m "${commits}"              \
            -m "Build url: ${{ env.BUILD_URL }}"
          # verify the tag
          git tag -v "${tag}"
          # push the tag
          git push origin "${tag}"
