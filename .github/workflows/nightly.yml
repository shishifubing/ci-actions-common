name: nightly

on:
  schedule:
    # daily at 23:00 UTC
    - cron: 0 23 * * *
  pull_request:

env:
  JOB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  check_release:
    name: Check latest release
    runs-on: ubuntu-latest
    outputs:
      create_release: ${{ steps.check.outputs.create_release }}
      latest_release_version: ${{ steps.check.outputs.latest_release_version }}
      version: ${{ steps.check.outputs.version }}
    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Check latest release
        id: check
        run: |
          create_release=true

          latest_gh_release=$(
            gh api                                              \
              -H "Accept: application/vnd.github+json"          \
              "/repos/${{ github.repository }}/releases/latest" \
              --jq .tag_name                                    \
              || echo "0.1.0"
          )
          latest_tag=$(
            gh api                                     \
              -H "Accept: application/vnd.github+json" \
              "/repos/${{ github.repository }}/tags"   \
              --jq .[0].name                           \
              || echo "0.1.0"
          )

          [ "${latest_gh_release}" == "${latest_tag}" ] && create_release=false

          {
            echo "create_release=${create_release}"
            echo "latest_release_version=${latest_gh_release}"
            echo "version=${latest_tag}"
          } >>"${GITHUB_OUTPUT}"

  notes:
    name: Generate release notes
    runs-on: ubuntu-latest
    needs: check_release
    outputs:
      name: ${{ steps.notes.name }}
      body: ${{ steps.notes.body }}

    steps:
      - name: Generate release notes
        id: notes
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          tag='${{ needs.check_release.outputs.version }}'
          previous_tag='${{ needs.check_release.outputs.latest_release_version }}'
          gh api                                                      \
            --method POST                                             \
            -H "Accept: application/vnd.github+json"                  \
            "/repos/${{ github.repository }}/releases/generate-notes" \
            -f tag_name="${tag}"                                      \
            -f previous_tag_name="${previous_tag}"                    \
            >release_notes.json

          {
            echo "name=$(jq -r .name release_notes.json)"
            echo "body=$(jq -r .body release_notes.json)"
          } >>"${GITHUB_OUTPUT}"

  release:
    name: Publish a release
    runs-on: ubuntu-latest
    needs:
      - check_release
      - notes
    if: needs.check_release.outputs.create_release == 'true'
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Update CHANGELOG.md
        uses: stefanzweifel/changelog-updater-action@bbfa2bd8afcc53bf7ec1f01e69a7847d82a8b4c6 # v1
        with:
          latest-version: ${{ needs.check_release.outputs.version }}
          release-notes: ${{ needs.notes.outputs.body }}

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@111c56156bcc6918c056dbef52164cfa583dc549 # v5.2.0
        with:
          gpg_private_key: ${{ secrets.CI_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.CI_GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Create Pull Request
        id: pr
        uses: peter-evans/create-pull-request@2b011faafdcbc9ceb11414d64d0573f37c774b04 # v4.2.3
        with:
          token: ${{ github.token }}
          author: ${{ steps.import_gpg.outputs.name }} <${{ steps.import_gpg.outputs.email }}>
          committer: ${{ steps.import_gpg.outputs.name }} <${{ steps.import_gpg.outputs.email }}>
          add-paths: CHANGELOG.md
          title: Add ${{ needs.check_release.outputs.version }} to CHANGELOG.md [skip ci]
          body: This PR is automatically generated in ${{ env.JOB_URL }}
          labels: chore, repo, size/m
          signoff: true
          base: test
          branch: chore/changelog/add-version-${{ needs.check_release.outputs.version }}
          commit-message: |
            chore(changelog): add ${{ needs.check_release.outputs.version }}

            skip-checks: true
            job-url: ${{ env.JOB_URL }}

      - name: Merge Pull Request
        env:
          GH_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
        run: |
          gh pr merge                                \
            --auto                                   \
            --delete-branch                          \
            --merge                                  \
            ${{ steps.pr.outputs.pull-request-url }}

      - name: Create a release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        with:
          token: ${{ github.token }}
          tag_name: ${{ needs.check_release.outputs.version }}
          name: ${{ needs.notes.outputs.name }}
          body: ${{ needs.notes.outputs.body }}
