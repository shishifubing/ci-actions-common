name: release

on:
  schedule:
    # daily at 23:00 UTC
    - cron: 0 23 * * *
  workflow_dispatch:

env:
  JOB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  prepare:
    name: Get release information
    runs-on: ubuntu-latest
    outputs:
      create_release: ${{ steps.check.outputs.create_release }}
      last_version: ${{ steps.check.outputs.latest_release_version }}
      version: ${{ steps.check.outputs.version }}
      name: ${{ steps.notes.outputs.name }}
      body: ${{ steps.notes.outputs.body }}
    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Check latest release
        id: check
        run: |
          create_release=true

          latest_gh_release=$(
            gh api                                              \
              -H "Accept: application/vnd.github+json"          \
              "/repos/${{ github.repository }}/releases/latest" \
              --jq .tag_name
          )
          latest_tag=$(
            gh api                                     \
              -H "Accept: application/vnd.github+json" \
              "/repos/${{ github.repository }}/tags"   \
              --jq .[0].name
          )

          [ "${latest_gh_release}" == "${latest_tag}" ] && create_release=false

          {
            echo "create_release=${create_release}"
            echo "latest_release_version=${latest_gh_release}"
            echo "version=${latest_tag}"
          } >>"${GITHUB_OUTPUT}"

      - name: Generate release notes
        id: notes
        if: steps.check.outputs.create_release == 'true'
        run: |
          tag='${{ steps.check.outputs.version }}'
          previous_tag='${{ steps.check.outputs.latest_release_version }}'
          gh api                                                      \
            --method POST                                             \
            -H "Accept: application/vnd.github+json"                  \
            "/repos/${{ github.repository }}/releases/generate-notes" \
            -f tag_name="${tag}"                                      \
            -f previous_tag_name="${previous_tag}"                    \
            >release_notes.json

          {
            echo "name=$(jq -r .name release_notes.json)"
            echo "body<<EOF"
            jq -r .body release_notes.json
            echo "EOF"
          } >>"${GITHUB_OUTPUT}"

  release:
    name: Publish a release
    runs-on: ubuntu-latest
    needs: prepare
    if: needs.prepare.outputs.create_release == 'true'

    steps:
      - name: Create a release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        with:
          # events triggered by GitHub Actions don't trigger GitHub Actions
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          tag_name: ${{ needs.prepare.outputs.version }}
          name: ${{ needs.prepare.outputs.name }}
          body: ${{ needs.prepare.outputs.body }}
